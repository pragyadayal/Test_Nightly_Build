name: On Push Scheduled Branch Check

on:
  schedule:
    - cron: "40 10 * * *"  # Runs at 10:40 AM UTC (4:10 PM IST)
  workflow_dispatch:  # Allows manual triggering

jobs:
  check-new-commits:
    runs-on: ubuntu-latest
    outputs:
      changed_branches: ${{ steps.detect-changes.outputs.changed_branches }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get all history

      - name: Restore previous commit hashes
        id: cache-restore
        uses: actions/cache@v3
        with:
          path: .commit_hashes
          key: commit-hashes-${{ github.run_id }}
          restore-keys: commit-hashes-

      - name: Detect new commits on branches
        id: detect-changes
        run: |
          mkdir -p .commit_hashes
          BRANCHES=("main" "develop" "feature-abc" "feature-mno")
          CHANGED_BRANCHES=()

          echo "Checking for new commits..."
          for branch in "${BRANCHES[@]}"; do
            latest_commit=$(git ls-remote origin refs/heads/$branch | awk '{print $1}')
            prev_commit_file=".commit_hashes/$branch"

            if [ -f "$prev_commit_file" ]; then
              prev_commit=$(cat "$prev_commit_file")
              if [ "$prev_commit" != "$latest_commit" ]; then
                CHANGED_BRANCHES+=("$branch")
                echo "✅ New commit detected on $branch: $latest_commit"
              else
                echo "❌ No new commit on $branch"
              fi
            else
              echo "🆕 First-time check for $branch. Commit: $latest_commit"
              CHANGED_BRANCHES+=("$branch")
            fi

            # Save latest commit hash
            echo "$latest_commit" > "$prev_commit_file"
          done

          echo "Changed branches: ${CHANGED_BRANCHES[*]}"
          echo "changed_branches=${CHANGED_BRANCHES[*]}" >> $GITHUB_ENV
          echo "::set-output name=changed_branches::${CHANGED_BRANCHES[*]}"

      - name: Save commit hashes
        uses: actions/cache@v3
        with:
          path: .commit_hashes
          key: commit-hashes-${{ github.run_id }}
            
           
