name: Build Feature Branches

on:
  #schedule:
    #- cron: '5 * * * *'  # Runs every 5 minutes to check for new commits in feature-1
  workflow_dispatch:  
    inputs:
      branch:
        description: 'Select a branch to build'
        required: true
        type: choice
        options:
          - feature-2
        

jobs:
  check-new-commits:
    runs-on: self-hosted
    outputs:
      new_commit: ${{ steps.check-commit.outputs.new_commit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all branches

      - name: Check for new commits in feature-1
        id: check-commit
        run: |
          LAST_COMMIT_FILE=".github/last_commit_feature1"
          LATEST_COMMIT=$(git rev-parse origin/feature-1)

          if [[ -f "$LAST_COMMIT_FILE" ]]; then
            LAST_COMMIT=$(cat "$LAST_COMMIT_FILE")
          else
            LAST_COMMIT=""
          fi

          echo "Latest commit: $LATEST_COMMIT"
          echo "Last known commit: $LAST_COMMIT"

          if [[ "$LATEST_COMMIT" != "$LAST_COMMIT" ]]; then
            echo "New commit detected!"
            echo "$LATEST_COMMIT" > "$LAST_COMMIT_FILE"
            echo "new_commit=true" >> $GITHUB_OUTPUT
          else
            echo "No new commits found."
            echo "new_commit=false" >> $GITHUB_OUTPUT
          fi

  find-feature-branches:
    runs-on: self-hosted
    needs: check-new-commits
    if: github.event_name == 'workflow_dispatch' || needs.check-new-commits.outputs.new_commit == 'true'
    outputs:
      branches: ${{ steps.set-branches.outputs.branches }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all branches

      - name: Get all feature branches
        id: set-branches
        run: |
          FEATURE_BRANCHES=$(git branch -r | grep 'origin/feature-' | awk -F'/' '{print $2}' | jq -R -s -c 'split("\n")[:-1]')
          echo "Feature branches found: $FEATURE_BRANCHES"
          echo "branches=$FEATURE_BRANCHES" >> $GITHUB_OUTPUT

  process-feature-branches:
    needs: find-feature-branches
    runs-on: self-hosted
    if: github.event_name == 'workflow_dispatch' || needs.find-feature-branches.outputs.branches != '[]'
    strategy:
      matrix:
        branch: ${{ fromJson(needs.find-feature-branches.outputs.branches) }}
    steps:
      - name: Checkout selected feature branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || matrix.branch }}

      - name: Display the text file contents
        run: |
          cat test.txt || echo "File not found in branch ${{ github.event.inputs.branch || matrix.branch }}"
